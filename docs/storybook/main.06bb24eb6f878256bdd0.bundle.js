(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1270:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(195),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(41);__webpack_require__(1308),__webpack_require__(1310);Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.configureActions)({depth:100,limit:20}),Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.addParameters)({backgrounds:[{name:"white",value:"#FFFFFF",default:!0},{name:"mid gray",value:"#999999"},{name:"black",value:"#000000"}]})},1310:function(module,exports,__webpack_require__){var api=__webpack_require__(1311),content=__webpack_require__(1312);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},1312:function(module,exports,__webpack_require__){(exports=__webpack_require__(1313)(!1)).push([module.i,"body {\n  font-family: Arial, Helvetica, sans-serif;\n}\n",""]),module.exports=exports},1314:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(195);module._StorybookPreserveDecorators=!0,Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(1316)],module)}.call(this,__webpack_require__(1315)(module))},1316:function(module,exports,__webpack_require__){var map={"./display.stories.js":1336,"./form.stories.js":1337,"./mati.stories.js":1340,"./microfrontend.stories.js":1341,"./viewport.stories.js":1338};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1316},1336:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Tabs",(function(){return Tabs})),__webpack_require__.d(__webpack_exports__,"Toast",(function(){return Toast})),__webpack_require__.d(__webpack_exports__,"Tooltip",(function(){return Tooltip})),__webpack_require__.d(__webpack_exports__,"CopyToClipboard",(function(){return CopyToClipboard}));var dist=__webpack_require__(41),html=__webpack_require__(462),html_default=__webpack_require__.n(html),esm=__webpack_require__(8);class HtnaTabs_HtnaTabs extends esm.b{}HtnaTabs_HtnaTabs.config={elementName:"htna-tabs",render:()=>'\n    <div id="tabs"><div id="tabs-wrp"><slot name="tab"></slot></div></div>\n    <div id="contents"><slot name="content"></slot></div>\n    ',style:"\n:host {\n  display: flex;\n  flex-direction: column;\n}\n#tabs {\noverflow: auto;\n}\n#tabs-wrp {\n  display: flex;\n  flex-direction: row;\n}\n    ",attributesSchema:{"tab-active-class":{type:String,property:!0,value:"active"},"content-active-class":{type:String,property:!0,value:"active"},"tab-inactive-class":{type:String,property:!0,value:"inactive"},"content-inactive-class":{type:String,property:!0,value:"inactive"},index:{type:Number,observed:!0,property:!0,value:0}},controller:({shadow:shadow,light:light,attributes:attributes,slot:slot})=>{let tabIndex=-1;const updateIndex=()=>{const newIndex=attributes.get("index")||0;if(newIndex!==tabIndex){const prevIndex=tabIndex;tabIndex=newIndex;const tabActiveClass=attributes.get("tab-active-class"),cntActiveClass=attributes.get("content-active-class"),tabInactiveClass=attributes.get("tab-inactive-class"),cntInactiveClass=attributes.get("content-inactive-class"),tabs=Array.from(slot.getAll("tab")),cnts=Array.from(slot.getAll("content"));tabs.forEach((tab,i)=>{tab.classList.toggle(tabActiveClass,i===newIndex),tab.classList.toggle(tabInactiveClass,i!==newIndex)}),cnts.forEach((cnt,i)=>{cnt.classList.toggle(cntActiveClass,i===newIndex),cnt.classList.toggle(cntInactiveClass,i!==newIndex)}),light.dispatch("change",{index:newIndex,previousIndex:prevIndex})}};return shadow.$("#tabs").addEventListener("click",e=>{const newIndex=Array.from(slot.getAll("tab")).indexOf(e.target);newIndex>-1&&(attributes.set("index",newIndex),updateIndex())}),{connectedCallback:()=>{updateIndex()},attributeChangedCallback:updateIndex,mutationObserverCallback:updateIndex}}};var display_HtnaTabs=HtnaTabs_HtnaTabs,umd=__webpack_require__(32);class HtnaToast_HtnaToast extends esm.b{}HtnaToast_HtnaToast.config={elementName:"htna-toast",render:()=>"<slot></slot>",style:"\n:host {\n  display: block;\n  position: fixed;\n  visibility: hidden;\n}\n    ",attributesSchema:{autohide:{type:Number,observed:!0,property:!0,value:0},position:{type:String,property:!0,value:"top-right"},"show-style-from":{type:String,property:!0},"show-style-to":{type:String,property:!0},"hide-style-from":{type:String,property:!0},"hide-style-to":{type:String,property:!0}},controller:({element:element,light:light,attributes:attributes})=>{const hide=()=>{const animationStyles=[],hideStyleTo=attributes.get("hide-style-to");if(hideStyleTo){const hideStyleFrom=attributes.get("hide-style-from");hideStyleFrom&&animationStyles.push(Object(umd.parsePropertiesString)(hideStyleFrom)),animationStyles.push(Object(umd.parsePropertiesString)(hideStyleTo))}else animationStyles.push({opacity:1}),animationStyles.push({opacity:0});Object(umd.animateTo)(element,animationStyles,void 0,()=>{Object(umd.removeNode)(element)})};let autohideTO;const cancelAutohide=()=>{autohideTO&&(window.clearTimeout(autohideTO),autohideTO=null)},updateAutohide=()=>{cancelAutohide();const timeout=attributes.get("autohide");timeout>0&&(autohideTO=window.setTimeout(()=>hide(),timeout))};return light.on(element,"click",()=>{cancelAutohide(),hide()}),{connectedCallback:()=>{updateAutohide()},attributeChangedCallback:{autohide:updateAutohide},properties:{show:{value:()=>{(()=>{const position=attributes.get("position"),rect=element.getBoundingClientRect(),style={top:"",left:"",bottom:"",right:""};switch(position){case"top-left":style.top="0",style.left="0";break;default:case"top-right":style.top="0",style.right="0";break;case"top-center":style.top="0",style.left=`calc(50% - (${Math.round(rect.width)}px / 2))`;break;case"bottom-left":style.bottom="0",style.left="0";break;case"bottom-right":style.bottom="0",style.right="0";break;case"bottom-center":style.bottom="0",style.left=`calc(50% - (${Math.round(rect.width)}px / 2))`}const animationStyles=[],showStyleTo=attributes.get("show-style-to");if(showStyleTo){const showStyleFrom=attributes.get("show-style-from");showStyleFrom&&animationStyles.push(Object(umd.parsePropertiesString)(showStyleFrom)),animationStyles.push(Object(umd.parsePropertiesString)(showStyleTo))}else animationStyles.push({opacity:0}),animationStyles.push({opacity:1});Object(umd.setStyle)(element,style),Object(umd.animateTo)(element,animationStyles)})(),element.style.visibility="visible"}}}}}};var display_HtnaToast=HtnaToast_HtnaToast,dom=__webpack_require__(463);function parsePositionalTarget(value){const match=value.match(/^\s*(?:([0-9.]+([+-][0-9.]+)?)\s*:\s*([0-9.]+([+-][0-9.]+)?)\s+)?([^\s0-9][^\s]+)(?:\s+([0-9.]+([+-][0-9.]+)?)\s*:\s*([0-9.]+([+-][0-9.]+)?))?\s*$/i);return!!match&&{nodeX:parseFloat(match[1]||"0"),nodeXOffset:parseFloat(match[2]||"0"),nodeY:parseFloat(match[3]||"0"),nodeYOffset:parseFloat(match[4]||"0"),target:match[5],targetX:parseFloat(match[6]||"0"),targetXOffset:parseFloat(match[7]||"0"),targetY:parseFloat(match[8]||"0"),targetYOffset:parseFloat(match[9]||"0")}}class HtnaTooltip_HtnaTooltip extends esm.b{}HtnaTooltip_HtnaTooltip.config={elementName:"htna-tooltip",render:()=>"<slot></slot>",style:"\n:host {\n  display: block;\n  position: fixed;\n  visibility: hidden;\n  pointer-events: none;\n}\n    ",attributesSchema:{for:{type:String,observed:!0,property:!0,value:0},"open-style-from":{type:String,property:!0},"open-style-to":{type:String,property:!0},"close-style-from":{type:String,property:!0},"close-style-to":{type:String,property:!0}},controller:({element:element,attributes:attributes})=>{const adjustPosition=()=>{!function applyPositionalTarget(node,value,preventExitoOfScreen=!1){const posInfo=parsePositionalTarget(value);if(posInfo){const target=document.getElementById(posInfo.target);if(target){const pos=Object(dom.a)(node,posInfo.nodeX,posInfo.nodeY,target,posInfo.targetX,posInfo.targetY);let left=pos.left-posInfo.nodeXOffset+posInfo.targetXOffset,top=pos.top-posInfo.nodeYOffset+posInfo.targetYOffset;return preventExitoOfScreen&&(left=Math.max(0,Math.min(left,document.documentElement.clientWidth-pos.width)),top=Math.max(0,Math.min(top,document.documentElement.clientHeight-pos.height))),node.style.left=Math.round(left)+"px",node.style.top=Math.round(top)+"px",!0}}return!1}(element,attributes.get("for"),!0);const animationStyles=[],openStyleTo=attributes.get("open-style-to");if(openStyleTo){const openStyleFrom=attributes.get("open-style-from");openStyleFrom&&animationStyles.push(Object(umd.parsePropertiesString)(openStyleFrom)),animationStyles.push(Object(umd.parsePropertiesString)(openStyleTo))}else animationStyles.push({opacity:0}),animationStyles.push({opacity:1});Object(umd.animateTo)(element,animationStyles)},show=()=>{adjustPosition(),Object(umd.setStyle)(element,{visibility:"visible"})},hide=()=>{const animationStyles=[],closeStyleTo=attributes.get("close-style-to");if(closeStyleTo){const closeStyleFrom=attributes.get("close-style-from");closeStyleFrom&&animationStyles.push(Object(umd.parsePropertiesString)(closeStyleFrom)),animationStyles.push(Object(umd.parsePropertiesString)(closeStyleTo))}else animationStyles.push({opacity:1}),animationStyles.push({opacity:0});Object(umd.animateTo)(element,animationStyles,void 0,()=>{Object(umd.setStyle)(element,{visibility:"hidden"})})},showListener=()=>show(),hideListener=()=>hide();let actTargetNode;const removeEventListener=()=>{actTargetNode&&(actTargetNode.removeEventListener("mouseenter",showListener),actTargetNode.removeEventListener("focus",showListener),actTargetNode.removeEventListener("mouseleave",hideListener),actTargetNode.removeEventListener("blur",hideListener),actTargetNode=null)},addListeners=()=>{removeEventListener();const targetInfo=parsePositionalTarget(attributes.get("for"));if(targetInfo&&targetInfo.target){const targetNode=document.getElementById(targetInfo.target);targetNode&&(targetNode.addEventListener("mouseenter",showListener),targetNode.addEventListener("focus",showListener),targetNode.addEventListener("mouseleave",hideListener),targetNode.addEventListener("blur",hideListener),actTargetNode=targetNode)}};return{connectedCallback:()=>{addListeners()},disconnectedCallback:()=>{removeEventListener()},attributeChangedCallback:{for:addListeners},properties:{show:{value:show},hide:{value:hide}}}}};var display_HtnaTooltip=HtnaTooltip_HtnaTooltip;class HtnaCopyToClipboard_HtnaCopyToClipboard extends esm.b{}HtnaCopyToClipboard_HtnaCopyToClipboard.config={elementName:"htna-copytoclipboard",render:()=>"<slot></slot>",attributesSchema:{value:{type:String,property:!0,value:""}},controller:({element:element,light:light,attributes:attributes})=>{light.on(element,"click",()=>{const value=attributes.get("value");Object(umd.copyToClipboard)(value).then(()=>{light.dispatch("copied",{value:value})}).catch(error=>{light.dispatch("error",{error:error})})})}};var display_HtnaCopyToClipboard=HtnaCopyToClipboard_HtnaCopyToClipboard,addSourceDecorator=(__webpack_require__(66).withSource,__webpack_require__(66).addSource),__SOURCE_PREFIX__="/Users/sandrolain/Documents/Projects/HTNA-components/stories",__STORY__='import { action } from "@storybook/addon-actions";\nimport centered from "@storybook/addon-centered/html";\n\nimport HtnaTabs from "../src/display/HtnaTabs.ts";\nimport HtnaToast from "../src/display/HtnaToast.ts";\nimport HtnaTooltip from "../src/display/HtnaTooltip.ts";\nimport HtnaCopyToClipboard from "../src/display/HtnaCopyToClipboard.ts";\n\ntry {\nHtnaTabs.register();\nHtnaToast.register();\nHtnaTooltip.register();\nHtnaCopyToClipboard.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "Display",\n  decorators: [centered]\n};\n\nexport const Tabs = () => {\n  const html =  /*html*/`\n  <style>\n    [slot="tab"].active {\n      font-weight: bold;\n    }\n    [slot="content"].inactive {\n      display: none\n    }\n  </style>\n  <htna-tabs>\n    <button slot="tab">Tab 1</button>\n    <button slot="tab">Tab 2</button>\n    <button slot="tab">Tab 3</button>\n    <div slot="content">Cnt 1</div>\n    <div slot="content">Cnt 2</div>\n    <div slot="content">Cnt 3</div>\n  </htna-tabs>`;\n  return html;\n};\n\n\nexport const Toast = () => {\n  const $f = document.createDocumentFragment();\n  const style = document.createElement("style");\n  style.innerHTML = /*css*/`\n  htna-toast {\n    background: #CCCCCC;\n    padding: 1em;\n  }\n  `;\n  $f.appendChild(style);\n\n\n  const position = document.createElement("select");\n  position.innerHTML = /*html*/`\n    <option value="top-left">top-left</option>\n    <option value="top-right">top-right</option>\n    <option value="top-center">top-center</option>\n    <option value="bottom-left">bottom-left</option>\n    <option value="bottom-right">bottom-right</option>\n    <option value="bottom-center">bottom-center</option>\n  `;\n  $f.appendChild(position);\n\n  const btn = document.createElement("button");\n  btn.innerText = "Show";\n  btn.addEventListener("click", () => {\n    const toast = document.createElement("htna-toast");\n    toast.setAttribute("position", position.value);\n    toast.setAttribute("show-style-from", "transform: scale(0)");\n    toast.setAttribute("show-style-to", "transform: scale(1)");\n    toast.setAttribute("hide-style-from", "transform: scale(1)");\n    toast.setAttribute("hide-style-to", "transform: scale(0)");\n    toast.setAttribute("autohide", "3000");\n    toast.innerHTML = "Hello World!";\n    btn.parentNode.appendChild(toast);\n    toast.show();\n  });\n  $f.appendChild(btn);\n\n  return $f;\n};\n\n\n\nexport const Tooltip = () => {\n  const $f = document.createDocumentFragment();\n  const style = document.createElement("style");\n  style.innerHTML = /*css*/`\n  htna-tooltip {\n    background: #CCCCCC;\n    padding: 1em;\n  }\n  `;\n  $f.appendChild(style);\n\n\n  const btn = document.createElement("button");\n  btn.setAttribute("id", "test-btn");\n  btn.innerText = "Button";\n  $f.appendChild(btn);\n\n  const ttip = document.createElement("htna-tooltip");\n  ttip.setAttribute("for", "0.5:0 test-btn 0.5:1+5");\n  ttip.setAttribute("show-style-from", "transform: scale(0)");\n  ttip.setAttribute("show-style-to", "transform: scale(1)");\n  ttip.setAttribute("hide-style-from", "transform: scale(1)");\n  ttip.setAttribute("hide-style-to", "transform: scale(0)");\n  ttip.innerHTML = "Hello World!";\n  $f.appendChild(ttip);\n\n  return $f;\n};\n\n\nexport const CopyToClipboard = () => {\n  const el = document.createElement("htna-copytoclipboard");\n  el.setAttribute("value", "text to copy");\n  el.innerHTML = "<button>Copy!</button>";\n  el.addEventListener("copied", action("copied"));\n  return el;\n};\n',__ADDS_MAP__={"display--tabs":{startLoc:{col:20,line:23},endLoc:{col:1,line:42},startBody:{col:20,line:23},endBody:{col:1,line:42}},"display--toast":{startLoc:{col:21,line:45},endLoc:{col:1,line:85},startBody:{col:21,line:45},endBody:{col:1,line:85}},"display--tooltip":{startLoc:{col:23,line:89},endLoc:{col:1,line:116},startBody:{col:23,line:89},endBody:{col:1,line:116}},"display--copy-to-clipboard":{startLoc:{col:31,line:119},endLoc:{col:1,line:125},startBody:{col:31,line:119},endBody:{col:1,line:125}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};try{display_HtnaTabs.register(),display_HtnaToast.register(),display_HtnaTooltip.register(),display_HtnaCopyToClipboard.register()}catch(e){window.location.reload()}__webpack_exports__.default={parameters:{storySource:{source:'import { action } from "@storybook/addon-actions";\nimport centered from "@storybook/addon-centered/html";\n\nimport HtnaTabs from "../src/display/HtnaTabs.ts";\nimport HtnaToast from "../src/display/HtnaToast.ts";\nimport HtnaTooltip from "../src/display/HtnaTooltip.ts";\nimport HtnaCopyToClipboard from "../src/display/HtnaCopyToClipboard.ts";\n\ntry {\nHtnaTabs.register();\nHtnaToast.register();\nHtnaTooltip.register();\nHtnaCopyToClipboard.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "Display",\n  decorators: [centered]\n};\n\nexport const Tabs = () => {\n  const html =  /*html*/`\n  <style>\n    [slot="tab"].active {\n      font-weight: bold;\n    }\n    [slot="content"].inactive {\n      display: none\n    }\n  </style>\n  <htna-tabs>\n    <button slot="tab">Tab 1</button>\n    <button slot="tab">Tab 2</button>\n    <button slot="tab">Tab 3</button>\n    <div slot="content">Cnt 1</div>\n    <div slot="content">Cnt 2</div>\n    <div slot="content">Cnt 3</div>\n  </htna-tabs>`;\n  return html;\n};\n\n\nexport const Toast = () => {\n  const $f = document.createDocumentFragment();\n  const style = document.createElement("style");\n  style.innerHTML = /*css*/`\n  htna-toast {\n    background: #CCCCCC;\n    padding: 1em;\n  }\n  `;\n  $f.appendChild(style);\n\n\n  const position = document.createElement("select");\n  position.innerHTML = /*html*/`\n    <option value="top-left">top-left</option>\n    <option value="top-right">top-right</option>\n    <option value="top-center">top-center</option>\n    <option value="bottom-left">bottom-left</option>\n    <option value="bottom-right">bottom-right</option>\n    <option value="bottom-center">bottom-center</option>\n  `;\n  $f.appendChild(position);\n\n  const btn = document.createElement("button");\n  btn.innerText = "Show";\n  btn.addEventListener("click", () => {\n    const toast = document.createElement("htna-toast");\n    toast.setAttribute("position", position.value);\n    toast.setAttribute("show-style-from", "transform: scale(0)");\n    toast.setAttribute("show-style-to", "transform: scale(1)");\n    toast.setAttribute("hide-style-from", "transform: scale(1)");\n    toast.setAttribute("hide-style-to", "transform: scale(0)");\n    toast.setAttribute("autohide", "3000");\n    toast.innerHTML = "Hello World!";\n    btn.parentNode.appendChild(toast);\n    toast.show();\n  });\n  $f.appendChild(btn);\n\n  return $f;\n};\n\n\n\nexport const Tooltip = () => {\n  const $f = document.createDocumentFragment();\n  const style = document.createElement("style");\n  style.innerHTML = /*css*/`\n  htna-tooltip {\n    background: #CCCCCC;\n    padding: 1em;\n  }\n  `;\n  $f.appendChild(style);\n\n\n  const btn = document.createElement("button");\n  btn.setAttribute("id", "test-btn");\n  btn.innerText = "Button";\n  $f.appendChild(btn);\n\n  const ttip = document.createElement("htna-tooltip");\n  ttip.setAttribute("for", "0.5:0 test-btn 0.5:1+5");\n  ttip.setAttribute("show-style-from", "transform: scale(0)");\n  ttip.setAttribute("show-style-to", "transform: scale(1)");\n  ttip.setAttribute("hide-style-from", "transform: scale(1)");\n  ttip.setAttribute("hide-style-to", "transform: scale(0)");\n  ttip.innerHTML = "Hello World!";\n  $f.appendChild(ttip);\n\n  return $f;\n};\n\n\nexport const CopyToClipboard = () => {\n  const el = document.createElement("htna-copytoclipboard");\n  el.setAttribute("value", "text to copy");\n  el.innerHTML = "<button>Copy!</button>";\n  el.addEventListener("copied", action("copied"));\n  return el;\n};\n',locationsMap:{"display--tabs":{startLoc:{col:20,line:23},endLoc:{col:1,line:42},startBody:{col:20,line:23},endBody:{col:1,line:42}},"display--toast":{startLoc:{col:21,line:45},endLoc:{col:1,line:85},startBody:{col:21,line:45},endBody:{col:1,line:85}},"display--tooltip":{startLoc:{col:23,line:89},endLoc:{col:1,line:116},startBody:{col:23,line:89},endBody:{col:1,line:116}},"display--copy-to-clipboard":{startLoc:{col:31,line:119},endLoc:{col:1,line:125},startBody:{col:31,line:119},endBody:{col:1,line:125}}}}},title:"Display",decorators:[html_default.a]};var Tabs=addSourceDecorator((function(){return'\n  <style>\n    [slot="tab"].active {\n      font-weight: bold;\n    }\n    [slot="content"].inactive {\n      display: none\n    }\n  </style>\n  <htna-tabs>\n    <button slot="tab">Tab 1</button>\n    <button slot="tab">Tab 2</button>\n    <button slot="tab">Tab 3</button>\n    <div slot="content">Cnt 1</div>\n    <div slot="content">Cnt 2</div>\n    <div slot="content">Cnt 3</div>\n  </htna-tabs>'}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/display.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),Toast=addSourceDecorator((function(){var $f=document.createDocumentFragment(),style=document.createElement("style");style.innerHTML="\n  htna-toast {\n    background: #CCCCCC;\n    padding: 1em;\n  }\n  ",$f.appendChild(style);var position=document.createElement("select");position.innerHTML='\n    <option value="top-left">top-left</option>\n    <option value="top-right">top-right</option>\n    <option value="top-center">top-center</option>\n    <option value="bottom-left">bottom-left</option>\n    <option value="bottom-right">bottom-right</option>\n    <option value="bottom-center">bottom-center</option>\n  ',$f.appendChild(position);var btn=document.createElement("button");return btn.innerText="Show",btn.addEventListener("click",(function(){var toast=document.createElement("htna-toast");toast.setAttribute("position",position.value),toast.setAttribute("show-style-from","transform: scale(0)"),toast.setAttribute("show-style-to","transform: scale(1)"),toast.setAttribute("hide-style-from","transform: scale(1)"),toast.setAttribute("hide-style-to","transform: scale(0)"),toast.setAttribute("autohide","3000"),toast.innerHTML="Hello World!",btn.parentNode.appendChild(toast),toast.show()})),$f.appendChild(btn),$f}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/display.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),Tooltip=addSourceDecorator((function(){var $f=document.createDocumentFragment(),style=document.createElement("style");style.innerHTML="\n  htna-tooltip {\n    background: #CCCCCC;\n    padding: 1em;\n  }\n  ",$f.appendChild(style);var btn=document.createElement("button");btn.setAttribute("id","test-btn"),btn.innerText="Button",$f.appendChild(btn);var ttip=document.createElement("htna-tooltip");return ttip.setAttribute("for","0.5:0 test-btn 0.5:1+5"),ttip.setAttribute("show-style-from","transform: scale(0)"),ttip.setAttribute("show-style-to","transform: scale(1)"),ttip.setAttribute("hide-style-from","transform: scale(1)"),ttip.setAttribute("hide-style-to","transform: scale(0)"),ttip.innerHTML="Hello World!",$f.appendChild(ttip),$f}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/display.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),CopyToClipboard=addSourceDecorator((function(){var el=document.createElement("htna-copytoclipboard");return el.setAttribute("value","text to copy"),el.innerHTML="<button>Copy!</button>",el.addEventListener("copied",Object(dist.action)("copied")),el}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/display.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1337:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DangerButton",(function(){return DangerButton})),__webpack_require__.d(__webpack_exports__,"NumberRange",(function(){return NumberRange})),__webpack_require__.d(__webpack_exports__,"DateRange",(function(){return DateRange})),__webpack_require__.d(__webpack_exports__,"LabelCheckbox",(function(){return LabelCheckbox})),__webpack_require__.d(__webpack_exports__,"DynFieldset",(function(){return DynFieldset}));__webpack_require__(46),__webpack_require__(12),__webpack_require__(7),__webpack_require__(14),__webpack_require__(15);var dist=__webpack_require__(41),esm=__webpack_require__(8);var form_HtnaNumberRange=Object(esm.c)({elementName:"htna-number-range",render:()=>'<div id="range">\n<div class="range-row"><label for="range-from"><slot name="from"></slot></label><input type="range" id="range-from" min="0" max="100" /><output for="range-from"></output></div>\n<div class="range-row"><label for="range-to"><slot name="to"></slot></label><input type="range" id="range-to" min="0" max="100" /><output for="range-to"></output></div>\n</div>',style:"\n:host {\n  display: inline-block;\n  --line-height: 1.5em;\n}\n#range {\n  position: relative;\n}\n.range-row {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  line-height: var(--line-height);\n  height: var(--line-height);\n}\nlabel {\n  width: 50px;\n  height: 100%;\n}\ninput {\n  flex: 1;\n  height: 100%;\n}\noutput {\n  width: 50px;\n  height: 100%;\n  text-align: right;\n}\n  ",attributesSchema:{step:{type:esm.a.Number,observed:!0,property:!0,value:1},min:{type:esm.a.Number,observed:!0,property:!0,value:0},max:{type:esm.a.Number,observed:!0,property:!0,value:100},value:{type:esm.a.CSVNumber,observed:!0,property:!0,value:[0,0]}},controller:({light:light,shadow:shadow,attributes:attributes})=>{const $from=shadow.$("#range-from"),$to=shadow.$("#range-to"),$fromOutput=shadow.$('output[for="range-from"'),$toOutput=shadow.$('output[for="range-to"'),updateValue=function(source="from"){const value=attributes.get("value"),min=attributes.get("min"),max=attributes.get("max"),valueFrom=Number($from.value),valueTo=Number($to.value);let newValueFrom=Math.max(Math.min(valueFrom,max),min),newValueTo=Math.max(Math.min(valueTo,max),min);"to"===source?newValueFrom=Math.min(newValueTo,newValueFrom):newValueTo=Math.max(newValueTo,newValueFrom),newValueFrom!==valueFrom&&($from.value=newValueFrom.toString()),newValueTo!==valueTo&&($to.value=newValueFrom.toString()),value[0]===newValueFrom&&value[1]===newValueTo||(attributes.set("value",[newValueFrom,newValueTo]),light.dispatch("change")),$fromOutput.value=$from.value,$toOutput.value=$to.value},setNewValue=()=>{const value=attributes.get("value");value&&($from.value=value[0].toString(),$to.value=value[1].toString())},updateAttributes=function(){const min=attributes.get("min"),max=attributes.get("max"),step=attributes.get("step");$from.min=min||0,$from.max=max||100,$from.step=step||1,$to.min=min||0,$to.max=max||100,$to.step=step||1,updateValue()};return $from.addEventListener("input",()=>{updateValue("from")}),$to.addEventListener("input",()=>{updateValue("to")}),{connectedCallback:()=>{setNewValue(),updateAttributes()},attributeChangedCallback:{step:updateAttributes,min:updateAttributes,max:updateAttributes,value:()=>{setNewValue(),updateValue()}}}}}),date=__webpack_require__(33);const defaultMin=new Date,defaultMax=new Date;Object(date.f)(defaultMin,[1900,1,1]),Object(date.g)(defaultMin,[0,0,0,0]),Object(date.f)(defaultMax,[2999,12,31]),Object(date.g)(defaultMax,[23,59,59,999]);var form_HtnaDateRange=Object(esm.c)({elementName:"htna-date-range",render:()=>'<div id="range">\n<div class="row" id="from">\n  <label for="from"><slot name="from"></slot></label>\n  <div class="row-date"><input id="from-date" type="date" placeholder="YYYY-MM-DD" pattern="^[0-9]{4}-(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])$" id="from-date-fld" /></div>\n  <div class="row-time"><input id="from-time" type="time" placeholder="HH:MM" pattern="^[0-2][0-9]:[0-5][0-9]$" id="from-time-fld" /></div>\n</div>\n<div class="row" id="to">\n  <label for="to"><slot name="to"></slot></label>\n  <div class="row-date"><input id="to-date" type="date" placeholder="YYYY-MM-DD" pattern="^[0-9]{4}-(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])$" id="from-date-fld" /></div>\n  <div class="row-time"><input id="to-time" type="time" placeholder="HH:MM" pattern="^[0-2][0-9]:[0-5][0-9]$" id="from-time-fld" /></div>\n</div>\n</div>',style:"\n#range {\n  height: 1em;\n  position: relative;\n}\n.row {\n  width: 100%;\n  display: flex;\n}\nlabel {\n  width: 50px;\n}\ninput {\n  flex: 1;\n}\noutput {\n  width: 50px;\n  text-align: right;\n}\n  ",attributesSchema:{min:{type:esm.a.Date,observed:!0,property:!0,value:defaultMin},max:{type:esm.a.Date,observed:!0,property:!0,value:defaultMax},value:{type:esm.a.CSVDate,observed:!0,property:!0,value:[new Date,new Date]}},controller:({light:light,shadow:shadow,attributes:attributes})=>{const $fromDate=shadow.$("#from-date"),$fromTime=shadow.$("#from-time"),$toDate=shadow.$("#to-date"),$toTime=shadow.$("#to-time"),updateValue=function(source="from"){const value=attributes.get("value"),min=attributes.get("min"),max=attributes.get("max"),valueFromDate=Object(date.b)($fromDate.value),valueFromTime=Object(date.h)($fromTime.value),valueToDate=Object(date.b)($toDate.value),valueToTime=Object(date.h)($toTime.value),valueFrom=Object(date.g)(valueFromDate,valueFromTime),valueTo=Object(date.g)(valueToDate,valueToTime);let newValueFrom=Object(date.a)(valueFrom,min,max),newValueTo=Object(date.a)(valueTo,min,max);"to"===source?newValueFrom=Object(date.e)(newValueFrom,newValueTo):newValueTo=Object(date.d)(newValueFrom,newValueTo),newValueFrom.getTime()!==valueFrom.getTime()&&($fromDate.value=Object(date.c)(newValueFrom),$fromTime.value=Object(date.i)(newValueFrom)),newValueTo.getTime()!==valueTo.getTime()&&($toDate.value=Object(date.c)(newValueTo),$toTime.value=Object(date.i)(newValueTo)),value[0].getTime()===newValueFrom.getTime()&&value[1].getTime()===newValueTo.getTime()||(attributes.set("value",[newValueFrom,newValueTo]),light.dispatch("change"))},setNewValue=()=>{const value=attributes.get("value");value&&($fromDate.value=Object(date.c)(value[0]),$fromTime.value=Object(date.i)(value[0]),$toDate.value=Object(date.c)(value[1]),$toTime.value=Object(date.i)(value[1]))},updateAttributes=function(){const step=attributes.get("step");$fromTime.step=(step||60).toString(),$toTime.step=(step||60).toString(),updateValue()};return $fromDate.addEventListener("input",()=>{updateValue("from")}),$fromTime.addEventListener("input",()=>{updateValue("from")}),$toDate.addEventListener("input",()=>{updateValue("to")}),$toTime.addEventListener("input",()=>{updateValue("to")}),{connectedCallback:()=>{setNewValue(),updateAttributes()},attributeChangedCallback:{step:updateAttributes,min:updateAttributes,max:updateAttributes,value:()=>{setNewValue(),updateValue()}}}}});const definition={elementName:"htna-label-checkbox",formInput:"checkbox",render:()=>'<label id="cnt"><input type="checkbox" id="input" /><span id="label"><slot name="label"></slot></span></label>',style:"\n:host {\n  display: inline-block;\n}\nlabel {\n  display: flex;\n  flex-direction: row;\n}\n  ",attributesSchema:{name:{type:esm.a.String,observed:!0,property:!0,value:""},value:{type:esm.a.String,observed:!0,property:!0,value:""},checked:{type:Boolean,observed:!0,property:!0,value:!1}},controller:({light:light,shadow:shadow,attributes:attributes})=>{const $cnt=shadow.$("#cnt"),$input=shadow.$("#input"),updateChecked=()=>{const oldChecked=$input.checked,newChecked=attributes.get("checked");oldChecked!==newChecked&&($input.checked=newChecked,$cnt.classList.toggle("checked",newChecked),light.dispatch("change"))};return $input.addEventListener("input",()=>{const oldChecked=attributes.get("checked"),newChecked=$input.checked;oldChecked!==newChecked&&(attributes.set("checked",newChecked),light.dispatch("change"))}),{connectedCallback:()=>{updateChecked()},attributeChangedCallback:updateChecked}}},HtnaLabelCheckbox=Object(esm.c)(definition),HtnaLabelRadio=Object(esm.c)(Object.assign(Object.assign({},definition),{elementName:"htna-label-radio",formInput:"radio",render:()=>'<label id="cnt"><input type="radio" id="input" /><span id="label"><slot name="label"></slot></span></label>'}));class HtnaDangerButton_HtnaDangerButton extends esm.b{}HtnaDangerButton_HtnaDangerButton.config={elementName:"htna-danger-button",render:()=>'<button type="submit" part="button"><slot name="normal"></slot></button>',style:"\n:host {\n  display: contents;\n}\n    ",attributesSchema:{warning:{type:Boolean,observed:!0,property:!0,value:0},"restore-timeout":{type:Number,observed:!0,property:!0,value:5e3}},controller:({shadow:shadow,attributes:attributes})=>{const $btn=shadow.$("button");let restoreTO;const cancelRestoreTimeout=()=>{restoreTO&&(window.clearTimeout(restoreTO),restoreTO=null)},restoreButton=()=>{cancelRestoreTimeout(),attributes.set("warning",!1),$btn.innerHTML='<slot name="normal"></slot>'},setWarningState=()=>{attributes.set("warning",!0),$btn.innerHTML='<slot name="warning"></slot>',(()=>{cancelRestoreTimeout();const timeout=attributes.get("restore-timeout");restoreTO=window.setTimeout(restoreButton,timeout)})()};return $btn.addEventListener("click",e=>{attributes.get("warning")?restoreButton():(e.stopPropagation(),e.preventDefault(),setWarningState())}),{attributeChangedCallback:{warning:(name,oldValue,newValue)=>{if(oldValue===newValue)return;attributes.get("warning")?setWarningState():restoreButton()}}}}};var umd=__webpack_require__(32);class HtnaDynFieldset_HTNADynFieldset extends esm.b{constructor(){super(...arguments),this.fields=[]}addField(fieldInfo){this.fields.push(fieldInfo)}removeFieldByName(fieldName){this.fields=this.fields.filter(fieldInfo=>fieldInfo.name!==fieldName)}removeAllFields(){this.fields=[]}renderInput(fieldInfo){return fieldInfo.render?fieldInfo.render(fieldInfo):fieldInfo.tagName?Object(umd.createElement)(fieldInfo.tagName,fieldInfo.attributes):Object(umd.createElement)("input",{type:"text"})}renderField(fieldInfo){const{label:label,inputNode:inputNode}=fieldInfo,cnt=document.createElement("div");cnt.className="field";const labelNode=document.createElement("label");cnt.appendChild(labelNode);const labelCnt=document.createElement("div");labelCnt.className="field-label",labelCnt.innerText=label,labelNode.appendChild(labelCnt);const inputCnt=document.createElement("div");return inputCnt.className="field-input",inputCnt.appendChild(inputNode),labelNode.appendChild(inputCnt),cnt}render(force=!1){const fragment=document.createDocumentFragment(),fields=this.fields.slice(0);this.sortFn&&fields.sort(this.sortFn),fields.forEach(fieldInfo=>{const value=fieldInfo.inputNode?fieldInfo.inputNode.value:fieldInfo.value;fieldInfo.inputNode&&!force||(fieldInfo.inputNode=this.renderInput(fieldInfo)),fieldInfo.fieldNode&&!force||(fieldInfo.fieldNode=this.renderField(fieldInfo)),null!=value&&(fieldInfo.inputNode.value=value),fragment.appendChild(fieldInfo.fieldNode)}),this.access.shadow.empty(),this.access.shadow.append(fragment)}setSortFunction(sortFn){this.sortFn=sortFn}setFieldValue(name,value){this.fields.forEach(fieldInfo=>{fieldInfo.name===name&&(fieldInfo.value=value,fieldInfo.inputNode&&(fieldInfo.inputNode.value=value))})}getFieldValue(name){for(const fieldInfo of this.fields)if(fieldInfo.name===name)return fieldInfo.inputNode.value;return null}setValue(data,allValues=!1){this.fields.forEach(fieldInfo=>{const name=fieldInfo.name;name in data?(fieldInfo.value=data[name],fieldInfo.inputNode&&(fieldInfo.inputNode.value=data[name])):allValues&&(fieldInfo.inputNode.value="")})}getValue(){const data={};for(const fieldInfo of this.fields)data[fieldInfo.name]=fieldInfo.inputNode.value;return data}}HtnaDynFieldset_HTNADynFieldset.config={elementName:"htna-dyn-fieldset",render:()=>"",style:"\n    ",attributesSchema:{value:{type:esm.a.Entries,observed:!0,property:!0,value:[]}},controller:({element:element,attributes:attributes})=>({attributeChangedCallback:{value:()=>{element.setValues(attributes.get("value"))}}})};__webpack_require__(66).withSource;var addSourceDecorator=__webpack_require__(66).addSource,__SOURCE_PREFIX__="/Users/sandrolain/Documents/Projects/HTNA-components/stories",__STORY__='import { action } from "@storybook/addon-actions";\nimport HtnaNumberRange from "../src/form/HtnaNumberRange.ts";\nimport HtnaDateRange from "../src/form/HtnaDateRange.ts";\nimport { HtnaLabelCheckbox, HtnaLabelRadio } from "../src/form/HtnaLabelCheckebox.ts";\nimport { HtnaDangerButton } from "../src/form/HtnaDangerButton";\nimport { HTNADynFieldset } from "../src/form/HtnaDynFieldset";\n\ntry {\n  HtnaNumberRange.register();\n  HtnaDateRange.register();\n  HtnaLabelCheckbox.register();\n  HtnaLabelRadio.register();\n  HtnaDangerButton.register();\n  HTNADynFieldset.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "Form"\n};\n\nexport const DangerButton = () => {\n  const form = document.createElement("form");\n  form.addEventListener("submit", (e) => {\n    e.preventDefault();\n    console.log("submit", e);\n  });\n  const btn = document.createElement("htna-danger-button");\n  btn.innerHTML = `<span slot="normal">Click me!</span><span slot="warning">Sure?</span>`;\n  btn.addEventListener("click", action("click"));\n  form.appendChild(btn);\n  return form;\n};\n\nexport const NumberRange = () => {\n  const range = document.createElement("htna-number-range");\n  range.innerHTML = `<span slot="from">FROM</span><span slot="to">TO</span>`;\n  range.addEventListener("change", action("change"));\n  return range;\n};\n\nexport const DateRange = () => {\n  const range = document.createElement("htna-date-range");\n  range.innerHTML = `<span slot="from">FROM</span><span slot="to">TO</span>`;\n  range.addEventListener("change", action("change"));\n  return range;\n};\n\nexport const LabelCheckbox = () => {\n  const $f = document.createDocumentFragment();\n  $f.addEventListener("submit", (e) => {\n    e.preventDefault();\n    const data = new FormData($f);\n    console.log(JSON.stringify(Array.from(data.entries())));\n  });\n  for(let i = 0; i < 5; i++) {\n    const el = document.createElement(i % 2 === 0 ? "htna-label-checkbox" : "htna-label-radio");\n    el.setAttribute("name", "test");\n    el.setAttribute("value", i);\n    el.innerHTML = `<span slot="label">Checkbox Label</span>`;\n    el.addEventListener("change", action("change"));\n    const btn = document.createElement("button");\n    btn.innerHTML = "Toggle";\n    btn.addEventListener("click", (e) => {\n      e.preventDefault();\n      el.checked = !el.checked;\n    });\n    $f.appendChild(el);\n    $f.appendChild(document.createElement("br"));\n    $f.appendChild(btn);\n    $f.appendChild(document.createElement("br"));\n    $f.appendChild(document.createElement("br"));\n  }\n  $f.insertAdjacentHTML("beforeend", `<button type="submit">Submit</button>`);\n  return $f;\n};\n\n\nexport const DynFieldset = () => {\n  const $f = document.createElement("form");\n  const fs = document.createElement("htna-dyn-fieldset");\n\n  fs.addField({\n    label: "Text Input",\n    name: "txt",\n    tagName: "input",\n    attributes: {\n      type: "text"\n    }\n  });\n\n  fs.addField({\n    label: "Date Input",\n    name: "dt",\n    tagName: "input",\n    attributes: {\n      type: "date"\n    }\n  });\n\n  fs.addField({\n    label: "Number Range",\n    name: "nr",\n    tagName: "htna-number-range",\n    value: [10, 20]\n  });\n\n  fs.render();\n\n  $f.appendChild(fs);\n\n  const btn = document.createElement("button");\n  btn.type = "button";\n  btn.innerHTML = "Get Value";\n  btn.addEventListener("click", () => {\n    console.log(fs.getValue());\n  });\n  $f.appendChild(btn);\n  return $f;\n};\n',__ADDS_MAP__={"form--danger-button":{startLoc:{col:28,line:23},endLoc:{col:1,line:34},startBody:{col:28,line:23},endBody:{col:1,line:34}},"form--number-range":{startLoc:{col:27,line:36},endLoc:{col:1,line:41},startBody:{col:27,line:36},endBody:{col:1,line:41}},"form--date-range":{startLoc:{col:25,line:43},endLoc:{col:1,line:48},startBody:{col:25,line:43},endBody:{col:1,line:48}},"form--label-checkbox":{startLoc:{col:29,line:50},endLoc:{col:1,line:77},startBody:{col:29,line:50},endBody:{col:1,line:77}},"form--dyn-fieldset":{startLoc:{col:27,line:80},endLoc:{col:1,line:121},startBody:{col:27,line:80},endBody:{col:1,line:121}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};try{form_HtnaNumberRange.register(),form_HtnaDateRange.register(),HtnaLabelCheckbox.register(),HtnaLabelRadio.register(),HtnaDangerButton_HtnaDangerButton.register(),HtnaDynFieldset_HTNADynFieldset.register()}catch(e){window.location.reload()}__webpack_exports__.default={parameters:{storySource:{source:'import { action } from "@storybook/addon-actions";\nimport HtnaNumberRange from "../src/form/HtnaNumberRange.ts";\nimport HtnaDateRange from "../src/form/HtnaDateRange.ts";\nimport { HtnaLabelCheckbox, HtnaLabelRadio } from "../src/form/HtnaLabelCheckebox.ts";\nimport { HtnaDangerButton } from "../src/form/HtnaDangerButton";\nimport { HTNADynFieldset } from "../src/form/HtnaDynFieldset";\n\ntry {\n  HtnaNumberRange.register();\n  HtnaDateRange.register();\n  HtnaLabelCheckbox.register();\n  HtnaLabelRadio.register();\n  HtnaDangerButton.register();\n  HTNADynFieldset.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "Form"\n};\n\nexport const DangerButton = () => {\n  const form = document.createElement("form");\n  form.addEventListener("submit", (e) => {\n    e.preventDefault();\n    console.log("submit", e);\n  });\n  const btn = document.createElement("htna-danger-button");\n  btn.innerHTML = `<span slot="normal">Click me!</span><span slot="warning">Sure?</span>`;\n  btn.addEventListener("click", action("click"));\n  form.appendChild(btn);\n  return form;\n};\n\nexport const NumberRange = () => {\n  const range = document.createElement("htna-number-range");\n  range.innerHTML = `<span slot="from">FROM</span><span slot="to">TO</span>`;\n  range.addEventListener("change", action("change"));\n  return range;\n};\n\nexport const DateRange = () => {\n  const range = document.createElement("htna-date-range");\n  range.innerHTML = `<span slot="from">FROM</span><span slot="to">TO</span>`;\n  range.addEventListener("change", action("change"));\n  return range;\n};\n\nexport const LabelCheckbox = () => {\n  const $f = document.createDocumentFragment();\n  $f.addEventListener("submit", (e) => {\n    e.preventDefault();\n    const data = new FormData($f);\n    console.log(JSON.stringify(Array.from(data.entries())));\n  });\n  for(let i = 0; i < 5; i++) {\n    const el = document.createElement(i % 2 === 0 ? "htna-label-checkbox" : "htna-label-radio");\n    el.setAttribute("name", "test");\n    el.setAttribute("value", i);\n    el.innerHTML = `<span slot="label">Checkbox Label</span>`;\n    el.addEventListener("change", action("change"));\n    const btn = document.createElement("button");\n    btn.innerHTML = "Toggle";\n    btn.addEventListener("click", (e) => {\n      e.preventDefault();\n      el.checked = !el.checked;\n    });\n    $f.appendChild(el);\n    $f.appendChild(document.createElement("br"));\n    $f.appendChild(btn);\n    $f.appendChild(document.createElement("br"));\n    $f.appendChild(document.createElement("br"));\n  }\n  $f.insertAdjacentHTML("beforeend", `<button type="submit">Submit</button>`);\n  return $f;\n};\n\n\nexport const DynFieldset = () => {\n  const $f = document.createElement("form");\n  const fs = document.createElement("htna-dyn-fieldset");\n\n  fs.addField({\n    label: "Text Input",\n    name: "txt",\n    tagName: "input",\n    attributes: {\n      type: "text"\n    }\n  });\n\n  fs.addField({\n    label: "Date Input",\n    name: "dt",\n    tagName: "input",\n    attributes: {\n      type: "date"\n    }\n  });\n\n  fs.addField({\n    label: "Number Range",\n    name: "nr",\n    tagName: "htna-number-range",\n    value: [10, 20]\n  });\n\n  fs.render();\n\n  $f.appendChild(fs);\n\n  const btn = document.createElement("button");\n  btn.type = "button";\n  btn.innerHTML = "Get Value";\n  btn.addEventListener("click", () => {\n    console.log(fs.getValue());\n  });\n  $f.appendChild(btn);\n  return $f;\n};\n',locationsMap:{"form--danger-button":{startLoc:{col:28,line:23},endLoc:{col:1,line:34},startBody:{col:28,line:23},endBody:{col:1,line:34}},"form--number-range":{startLoc:{col:27,line:36},endLoc:{col:1,line:41},startBody:{col:27,line:36},endBody:{col:1,line:41}},"form--date-range":{startLoc:{col:25,line:43},endLoc:{col:1,line:48},startBody:{col:25,line:43},endBody:{col:1,line:48}},"form--label-checkbox":{startLoc:{col:29,line:50},endLoc:{col:1,line:77},startBody:{col:29,line:50},endBody:{col:1,line:77}},"form--dyn-fieldset":{startLoc:{col:27,line:80},endLoc:{col:1,line:121},startBody:{col:27,line:80},endBody:{col:1,line:121}}}}},title:"Form"};var DangerButton=addSourceDecorator((function(){var form=document.createElement("form");form.addEventListener("submit",(function(e){e.preventDefault(),console.log("submit",e)}));var btn=document.createElement("htna-danger-button");return btn.innerHTML='<span slot="normal">Click me!</span><span slot="warning">Sure?</span>',btn.addEventListener("click",Object(dist.action)("click")),form.appendChild(btn),form}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/form.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),NumberRange=addSourceDecorator((function(){var range=document.createElement("htna-number-range");return range.innerHTML='<span slot="from">FROM</span><span slot="to">TO</span>',range.addEventListener("change",Object(dist.action)("change")),range}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/form.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),DateRange=addSourceDecorator((function(){var range=document.createElement("htna-date-range");return range.innerHTML='<span slot="from">FROM</span><span slot="to">TO</span>',range.addEventListener("change",Object(dist.action)("change")),range}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/form.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),LabelCheckbox=addSourceDecorator((function(){var $f=document.createDocumentFragment();$f.addEventListener("submit",(function(e){e.preventDefault();var data=new FormData($f);console.log(JSON.stringify(Array.from(data.entries())))}));for(var _loop=function(i){var el=document.createElement(0==i%2?"htna-label-checkbox":"htna-label-radio");el.setAttribute("name","test"),el.setAttribute("value",i),el.innerHTML='<span slot="label">Checkbox Label</span>',el.addEventListener("change",Object(dist.action)("change"));var btn=document.createElement("button");btn.innerHTML="Toggle",btn.addEventListener("click",(function(e){e.preventDefault(),el.checked=!el.checked})),$f.appendChild(el),$f.appendChild(document.createElement("br")),$f.appendChild(btn),$f.appendChild(document.createElement("br")),$f.appendChild(document.createElement("br"))},i=0;5>i;i++)_loop(i);return $f.insertAdjacentHTML("beforeend",'<button type="submit">Submit</button>'),$f}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/form.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),DynFieldset=addSourceDecorator((function(){var $f=document.createElement("form"),fs=document.createElement("htna-dyn-fieldset");fs.addField({label:"Text Input",name:"txt",tagName:"input",attributes:{type:"text"}}),fs.addField({label:"Date Input",name:"dt",tagName:"input",attributes:{type:"date"}}),fs.addField({label:"Number Range",name:"nr",tagName:"htna-number-range",value:[10,20]}),fs.render(),$f.appendChild(fs);var btn=document.createElement("button");return btn.type="button",btn.innerHTML="Get Value",btn.addEventListener("click",(function(){console.log(fs.getValue())})),$f.appendChild(btn),$f}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/form.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1338:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Overlay",(function(){return Overlay})),__webpack_require__.d(__webpack_exports__,"ModalOverlay",(function(){return ModalOverlay}));var dist=__webpack_require__(41),esm=__webpack_require__(8);var viewport_HtnaOverlay=Object(esm.c)({elementName:"htna-overlay",render:()=>'<div id="overlay"><slot></slot></div>',style:"\n  :host {\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 99999;\n    width: 100%;\n    height: 100%;\n  }\n  #overlay {\n    width: 100%;\n    height: 100%;\n  }\n  ",attributesSchema:{background:{type:String,observed:!0,property:!0,value:"transparent"}},controller:({element:element,light:light,shadow:shadow,attributes:attributes})=>{const $overlay=shadow.$("#overlay"),updateStyles=()=>{$overlay.style.backgroundColor=attributes.get("background")||"transparent"};return light.on(element,"scroll",e=>{e.stopPropagation()}),light.on(element,"click",e=>{e.target===$overlay&&light.dispatch("dismiss")}),{connectedCallback:updateStyles,attributeChangedCallback:{background:updateStyles,padding:updateStyles}}}});var viewport_HtnaModalOverlay=Object(esm.c)({elementName:"htna-modal-overlay",render:()=>'<div id="overlay"><div id="overlay-wrp"><div id="overlay-cnt"><slot></slot></div></div></div>',style:"\n  :host {\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 99999;\n    width: 100%;\n    height: 100%;\n  }\n  #overlay {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n  }\n  #overlay.blurred {\n    backdrop-filter: blur(4px);\n  }\n  #overlay-wrp {\n    min-width: 100%;\n    min-height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  #overlay-cnt {\n\n  }\n  ",attributesSchema:{background:{type:String,observed:!0,property:!0,value:"rgba(0, 0, 0, 0.8)"},padding:{type:String,observed:!0,property:!0,value:"5vh"}},controller:({element:element,light:light,shadow:shadow,attributes:attributes})=>{const $overlay=shadow.$("#overlay"),$cnt=shadow.$("#overlay-cnt"),updateStyles=()=>{$overlay.style.backgroundColor=attributes.get("background")||"transparent",$cnt.style.padding=attributes.get("padding")};return light.on(element,"scroll",e=>{e.stopPropagation()}),light.on(element,"click",e=>{e.target===element&&light.dispatch("dismiss")}),{connectedCallback:updateStyles,attributeChangedCallback:{background:updateStyles,padding:updateStyles}}}}),addSourceDecorator=(__webpack_require__(66).withSource,__webpack_require__(66).addSource),__SOURCE_PREFIX__="/Users/sandrolain/Documents/Projects/HTNA-components/stories",__STORY__='import { action } from "@storybook/addon-actions";\nimport HtnaOverlay from "../src/viewport/HtnaOverlay.ts";\nimport HtnaModalOverlay from "../src/viewport/HtnaModalOverlay.ts";\n\ntry {\n  HtnaOverlay.register();\n  HtnaModalOverlay.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "Viewport"\n};\n\n\nexport const Overlay = () => {\n  const overlay = document.createElement("htna-overlay");\n  overlay.addEventListener("dismiss", action("dismiss"));\n  overlay.innerHTML = `\n    <div style="background: #FFFFFF; width: 200px; height: 100px"> Content </div>\n  `;\n  return overlay;\n};\n\nexport const ModalOverlay = () => {\n  const overlay = document.createElement("htna-modal-overlay");\n  overlay.addEventListener("dismiss", action("dismiss"));\n  overlay.innerHTML = `\n    <div style="background: #FFFFFF; width: 200px; height: 100px"> Content </div>\n  `;\n  return overlay;\n};\n',__ADDS_MAP__={"viewport--overlay":{startLoc:{col:23,line:17},endLoc:{col:1,line:24},startBody:{col:23,line:17},endBody:{col:1,line:24}},"viewport--modal-overlay":{startLoc:{col:28,line:26},endLoc:{col:1,line:33},startBody:{col:28,line:26},endBody:{col:1,line:33}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};try{viewport_HtnaOverlay.register(),viewport_HtnaModalOverlay.register()}catch(e){window.location.reload()}__webpack_exports__.default={parameters:{storySource:{source:'import { action } from "@storybook/addon-actions";\nimport HtnaOverlay from "../src/viewport/HtnaOverlay.ts";\nimport HtnaModalOverlay from "../src/viewport/HtnaModalOverlay.ts";\n\ntry {\n  HtnaOverlay.register();\n  HtnaModalOverlay.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "Viewport"\n};\n\n\nexport const Overlay = () => {\n  const overlay = document.createElement("htna-overlay");\n  overlay.addEventListener("dismiss", action("dismiss"));\n  overlay.innerHTML = `\n    <div style="background: #FFFFFF; width: 200px; height: 100px"> Content </div>\n  `;\n  return overlay;\n};\n\nexport const ModalOverlay = () => {\n  const overlay = document.createElement("htna-modal-overlay");\n  overlay.addEventListener("dismiss", action("dismiss"));\n  overlay.innerHTML = `\n    <div style="background: #FFFFFF; width: 200px; height: 100px"> Content </div>\n  `;\n  return overlay;\n};\n',locationsMap:{"viewport--overlay":{startLoc:{col:23,line:17},endLoc:{col:1,line:24},startBody:{col:23,line:17},endBody:{col:1,line:24}},"viewport--modal-overlay":{startLoc:{col:28,line:26},endLoc:{col:1,line:33},startBody:{col:28,line:26},endBody:{col:1,line:33}}}}},title:"Viewport"};var Overlay=addSourceDecorator((function(){var overlay=document.createElement("htna-overlay");return overlay.addEventListener("dismiss",Object(dist.action)("dismiss")),overlay.innerHTML='\n    <div style="background: #FFFFFF; width: 200px; height: 100px"> Content </div>\n  ',overlay}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/viewport.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),ModalOverlay=addSourceDecorator((function(){var overlay=document.createElement("htna-modal-overlay");return overlay.addEventListener("dismiss",Object(dist.action)("dismiss")),overlay.innerHTML='\n    <div style="background: #FFFFFF; width: 200px; height: 100px"> Content </div>\n  ',overlay}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/viewport.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1340:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"MatiButton",(function(){return MatiButton})),__webpack_require__.d(__webpack_exports__,"MatiButtonBlue",(function(){return MatiButtonBlue}));var dist=__webpack_require__(41),esm=__webpack_require__(8);var mati_HtnaMatiButton=Object(esm.c)({elementName:"htna-mati-button",render:()=>'<button type="button" part="button"><span><slot></slot></span></button>',style:"\n  :host {\n    display: inline-block;\n  }\n  button {\n    position: relative;\n    padding: 0.25em 0.5em;\n    border-radius: 0.5em;\n    box-shadow: 0 0 0.5em rgba(0, 0, 0, 0.2) inset;\n    background-image: linear-gradient(180deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0));\n    color: #FFFFFF;\n    font-size: 20px;\n    font-family: \"Arial Black\", Arial, sans-serif;\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);\n    text-transform: uppercase;\n    border: none;\n    font-weight: bold;\n    line-height: 1em;\n    text-align: center;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.5), 0px 2px 6px rgba(0, 0, 0, 0.2);\n  }\n  button::before {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: 1px;\n    right: 1px;\n    left: 1px;\n    top: 60%;\n    border-radius: 0.2em 0.2em 0.4em 0.4em;\n    background-image: linear-gradient(0deg, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.2));\n    filter: blur(0.2em);\n  }\n  button::after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 1px;\n    right: 1px;\n    left: 1px;\n    bottom: 50%;\n    border-radius: calc(0.5em - 1px) calc(0.5em - 1px) 0.2em 0.2em;\n    background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.2));\n  }\n  button:focus {\n    outline: none;\n  }\n  button:active {\n    filter: brightness(110%) contrast(110%);\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.5), 0px 2px 4px rgba(0, 0, 0, 0.2);\n  }\n  ",attributesSchema:{color:{type:String,observed:!0,property:!0,value:"#FF0099"},size:{type:String,observed:!0,property:!0,value:"16px"}},controller:({shadow:shadow,attributes:attributes})=>{const $btn=shadow.$("button"),updateButtonColor=()=>{$btn.style.backgroundColor=attributes.get("color"),$btn.style.fontSize=attributes.get("size")};return{connectedCallback:updateButtonColor,attributeChangedCallback:updateButtonColor}}}),addSourceDecorator=(__webpack_require__(66).withSource,__webpack_require__(66).addSource),__SOURCE_PREFIX__="/Users/sandrolain/Documents/Projects/HTNA-components/stories",__STORY__='import { action } from "@storybook/addon-actions";\nimport HtnaMatiButton from "../src/mati/HtnaMatiButton.ts";\n\ntry {\n  HtnaMatiButton.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "Mati",\n  parameters: {\n    info: () => "<htna-mati-button>PINK</htna-mati-button>"\n  }\n};\n\n\nexport const MatiButton = () => {\n  const button = document.createElement("htna-mati-button");\n  button.setAttribute("size", "48px");\n  button.appendChild(document.createTextNode("A"));\n  button.addEventListener("click", action("click"));\n  return button;\n};\n\n\nexport const MatiButtonBlue = () => {\n  const button = document.createElement("htna-mati-button");\n  button.setAttribute("color", "#0000FF");\n  button.appendChild(document.createTextNode("BLUE"));\n  button.addEventListener("click", action("click"));\n  return button;\n};\n',__ADDS_MAP__={"mati--mati-button":{startLoc:{col:26,line:18},endLoc:{col:1,line:24},startBody:{col:26,line:18},endBody:{col:1,line:24}},"mati--mati-button-blue":{startLoc:{col:30,line:27},endLoc:{col:1,line:33},startBody:{col:30,line:27},endBody:{col:1,line:33}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};try{mati_HtnaMatiButton.register()}catch(e){window.location.reload()}__webpack_exports__.default={title:"Mati",parameters:{storySource:{source:'import { action } from "@storybook/addon-actions";\nimport HtnaMatiButton from "../src/mati/HtnaMatiButton.ts";\n\ntry {\n  HtnaMatiButton.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "Mati",\n  parameters: {\n    info: () => "<htna-mati-button>PINK</htna-mati-button>"\n  }\n};\n\n\nexport const MatiButton = () => {\n  const button = document.createElement("htna-mati-button");\n  button.setAttribute("size", "48px");\n  button.appendChild(document.createTextNode("A"));\n  button.addEventListener("click", action("click"));\n  return button;\n};\n\n\nexport const MatiButtonBlue = () => {\n  const button = document.createElement("htna-mati-button");\n  button.setAttribute("color", "#0000FF");\n  button.appendChild(document.createTextNode("BLUE"));\n  button.addEventListener("click", action("click"));\n  return button;\n};\n',locationsMap:{"mati--mati-button":{startLoc:{col:26,line:18},endLoc:{col:1,line:24},startBody:{col:26,line:18},endBody:{col:1,line:24}},"mati--mati-button-blue":{startLoc:{col:30,line:27},endLoc:{col:1,line:33},startBody:{col:30,line:27},endBody:{col:1,line:33}}}},info:function info(){return"<htna-mati-button>PINK</htna-mati-button>"}}};var MatiButton=addSourceDecorator((function(){var button=document.createElement("htna-mati-button");return button.setAttribute("size","48px"),button.appendChild(document.createTextNode("A")),button.addEventListener("click",Object(dist.action)("click")),button}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/mati.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),MatiButtonBlue=addSourceDecorator((function(){var button=document.createElement("htna-mati-button");return button.setAttribute("color","#0000FF"),button.appendChild(document.createTextNode("BLUE")),button.addEventListener("click",Object(dist.action)("click")),button}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/mati.stories.js",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1341:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Include",(function(){return Include}));var dist=__webpack_require__(41),esm=__webpack_require__(8),__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};class HtnaIncludeCache{static getSourceFromCache(url){return __awaiter(this,void 0,void 0,(function*(){if(this.cache.has(url))return this.cache.get(url);const source=yield this.fetchSource(url);return this.cache.set(url,source),source}))}static fetchSource(url){return __awaiter(this,void 0,void 0,(function*(){const result=yield fetch(url);if(result.ok&&200===result.status){return yield result.text()}throw new Error("Bad Request")}))}}HtnaIncludeCache.cache=new Map;class HtnaInclude_HtnaInclude extends esm.b{}HtnaInclude_HtnaInclude.config={elementName:"htna-include",render:()=>"<slot></slot>",style:"\n    :host {\n      display: contents;\n    }\n    ",attributesSchema:{src:{type:String,observed:!0,property:!0,value:""},"allow-script":{type:Boolean,property:!0,value:!1},"disable-cache":{type:Boolean,property:!0,value:!1}},controller:({element:element,light:light,shadow:shadow,attributes:attributes})=>{let latestSrc;const updateInclusion=()=>__awaiter(void 0,void 0,void 0,(function*(){const newSrc=new window.URL(attributes.get("src"),window.location.href).href;if(newSrc!==latestSrc&&window.location.href!==newSrc)try{latestSrc=newSrc,shadow.empty();const html=attributes.get("disable-cache")?yield HtnaIncludeCache.fetchSource(newSrc):yield HtnaIncludeCache.getSourceFromCache(newSrc),div=document.createElement("div");div.innerHTML=html;const $f=document.createDocumentFragment(),scripts=Array.from(div.getElementsByTagName("script")).map(script=>({type:script.type||"text/javascript",source:script.innerHTML}));for(const child of Array.from(div.childNodes))child instanceof HTMLScriptElement||$f.appendChild(child);if(shadow.append($f),attributes.get("allow-script")&&scripts.length>0){const data={};for(const key in element.dataset)data[key]=element.dataset[key];scripts.forEach(script=>{if("text/javascript"===script.type){new Function("element","shadowRoot","dataset",script.source)(light.node,shadow.node,data)}else if("module"===script.type){const node=document.createElement("script");node.type="module",node.innerHTML=script.source,shadow.append(node)}})}light.dispatch("load",{src:newSrc})}catch(e){shadow.empty(),shadow.append(document.createElement("slot")),latestSrc=null,light.dispatch("error",e)}}));return{connectedCallback:updateInclusion,attributeChangedCallback:updateInclusion}}};var microfrontend_HtnaInclude=HtnaInclude_HtnaInclude,addSourceDecorator=(__webpack_require__(66).withSource,__webpack_require__(66).addSource);try{microfrontend_HtnaInclude.register()}catch(e){window.location.reload()}__webpack_exports__.default={parameters:{storySource:{source:'import { action } from "@storybook/addon-actions";\nimport HtnaInclude from "../src/microfrontend/HtnaInclude.ts";\n\ntry {\n  HtnaInclude.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "MicroFrontend"\n};\n\nexport const Include = () => {\n  const $f = document.createDocumentFragment();\n  const inc = document.createElement("htna-include");\n  inc.allowScript = true;\n  inc.setAttribute("data-foo", "bar");\n  inc.setAttribute("src", "./inclusion-1.html");\n  inc.addEventListener("load", action("load"));\n  inc.addEventListener("error", action("error"));\n  inc.innerHTML = `<em>Default element slot for fallback</em>`;\n  $f.appendChild(inc);\n\n  const btn = document.createElement("button");\n  btn.addEventListener("click", () => {\n    if(inc.getAttribute("src") === "./inclusion-1.html") {\n      inc.setAttribute("src", "./inclusion-2.html");\n    } else {\n      inc.setAttribute("src", "./inclusion-1.html");\n    }\n  });\n  btn.innerText = "Change Inclusion";\n  $f.appendChild(btn);\n\n\n  const btn2 = document.createElement("button");\n  btn2.addEventListener("click", () => {\n    inc.setAttribute("src", "./inclusion-3.html");\n  });\n  btn2.innerText = "Bad Inclusion";\n  $f.appendChild(btn2);\n\n  return $f;\n};\n',locationsMap:{"microfrontend--include":{startLoc:{col:23,line:14},endLoc:{col:1,line:45},startBody:{col:23,line:14},endBody:{col:1,line:45}}}}},title:"MicroFrontend"};var Include=addSourceDecorator((function(){var $f=document.createDocumentFragment(),inc=document.createElement("htna-include");inc.allowScript=!0,inc.setAttribute("data-foo","bar"),inc.setAttribute("src","./inclusion-1.html"),inc.addEventListener("load",Object(dist.action)("load")),inc.addEventListener("error",Object(dist.action)("error")),inc.innerHTML="<em>Default element slot for fallback</em>",$f.appendChild(inc);var btn=document.createElement("button");btn.addEventListener("click",(function(){"./inclusion-1.html"===inc.getAttribute("src")?inc.setAttribute("src","./inclusion-2.html"):inc.setAttribute("src","./inclusion-1.html")})),btn.innerText="Change Inclusion",$f.appendChild(btn);var btn2=document.createElement("button");return btn2.addEventListener("click",(function(){inc.setAttribute("src","./inclusion-3.html")})),btn2.innerText="Bad Inclusion",$f.appendChild(btn2),$f}),{__STORY__:'import { action } from "@storybook/addon-actions";\nimport HtnaInclude from "../src/microfrontend/HtnaInclude.ts";\n\ntry {\n  HtnaInclude.register();\n} catch(e) {\n  window.location.reload();\n}\n\nexport default {\n  title: "MicroFrontend"\n};\n\nexport const Include = () => {\n  const $f = document.createDocumentFragment();\n  const inc = document.createElement("htna-include");\n  inc.allowScript = true;\n  inc.setAttribute("data-foo", "bar");\n  inc.setAttribute("src", "./inclusion-1.html");\n  inc.addEventListener("load", action("load"));\n  inc.addEventListener("error", action("error"));\n  inc.innerHTML = `<em>Default element slot for fallback</em>`;\n  $f.appendChild(inc);\n\n  const btn = document.createElement("button");\n  btn.addEventListener("click", () => {\n    if(inc.getAttribute("src") === "./inclusion-1.html") {\n      inc.setAttribute("src", "./inclusion-2.html");\n    } else {\n      inc.setAttribute("src", "./inclusion-1.html");\n    }\n  });\n  btn.innerText = "Change Inclusion";\n  $f.appendChild(btn);\n\n\n  const btn2 = document.createElement("button");\n  btn2.addEventListener("click", () => {\n    inc.setAttribute("src", "./inclusion-3.html");\n  });\n  btn2.innerText = "Bad Inclusion";\n  $f.appendChild(btn2);\n\n  return $f;\n};\n',__ADDS_MAP__:{"microfrontend--include":{startLoc:{col:23,line:14},endLoc:{col:1,line:45},startBody:{col:23,line:14},endBody:{col:1,line:45}}},__MAIN_FILE_LOCATION__:"/microfrontend.stories.js",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/Users/sandrolain/Documents/Projects/HTNA-components/stories",__IDS_TO_FRAMEWORKS__:{}})},464:function(module,exports,__webpack_require__){__webpack_require__(465),__webpack_require__(612),__webpack_require__(613),__webpack_require__(1270),module.exports=__webpack_require__(1314)},531:function(module,exports){}},[[464,180,181]]]);
//# sourceMappingURL=main.06bb24eb6f878256bdd0.bundle.js.map